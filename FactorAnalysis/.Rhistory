# Write individual scores and loadings to files
cat("\nFactor Analysis with Rotation\n")
fa4_rot <- fa(r_spearman, nfactors = 4, n.obs = 144, rotate="Varimax", scores="regression", fm="ml")
fa4_rot_scores <- factor.scores(nona_df, fa4_rot$loadings, method="Bartlett")$scores
fa4_rot_sort <- fa.sort(fa4_rot)
write.table(fa4_rot_scores, file="fa4_rotated_individual_score.tsv", sep="\t")
write.table(fa4_rot_sort$loadings, file="fa4_rotated_loadings.tsv", sep="\t")
# Perform maximum likelihood factor analysis without rotation, 4 factors
# Write individual scores and loadings to files
cat("\nFactor Analysis without Rotation\n")
fa4_unrot <- fa(r_spearman, nfactors = 4, n.obs = 144, rotate="none", scores="regression", fm="ml")
fa4_unrot_scores <- factor.scores(nona_df, fa4_unrot$loadings, method="Bartlett")$scores
fa4_unrot_sort <- fa.sort(fa4_unrot)
write.table(fa4_unrot_scores, file="fa4_unrotated_individual_score.tsv", sep="\t")
write.table(fa4_unrot_sort$loadings, file="fa4_unrotated_loadings.tsv", sep="\t")
# Congruence of rotated factors with unrotated factors - 4 factors
Rot_v_Unrot4 <- factor.congruence(fa4_rot,fa4_unrot)
write.table(Rot_v_Unrot4, file="Congruence_Rot_v_Unrot4.tsv", sep="\t")
#FA4_Rotated Eschelon-ordering of Spearman matrix
ord4 <- fa4_rot_sort$order
PARL_esch4 <- PARL_data[,c(ord4)]
names_esch4 <- names[,c(ord4)]
esch4_df <- data.frame(PARL_esch4) # 144 subjects
colnames(esch4_df) <- names_esch4
esch4_spearman <- cor(esch4_df, method="spearman")
# Correlation plot 4 factors - save to PNG file
png(file="CorrMat_4esch.png", width=3000, height=3000, res=300)
corrplot(esch4_spearman, type="upper", tl.col="black") |> corrRect(name = c('STAI Trait T Score','16PF Reasoning', '16PF Warmth', 'SQ', '16PF Perfectionism'))
dev.off()
# Correlation plot 4 factors - save to PNG file
png(file="CorrMat_4esch.png", width=3000, height=3000, res=300)
corrplot(esch4_spearman, type="lower", tl.col="black") |> corrRect(name = c('STAI Trait T Score','16PF Reasoning', '16PF Warmth', 'SQ', '16PF Perfectionism'))
dev.off()
# Correlation plot 4 factors - save to PNG file
png(file="CorrMat_4esch.png", width=3000, height=3000, res=300)
corrplot(esch4_spearman, type="upper", tl.col="black") |> corrRect(name = c('STAI Trait T Score','16PF Reasoning', '16PF Warmth', 'SQ', '16PF Perfectionism'))
dev.off()
# Correlation plot 4 factors - save to PNG file
png(file="CorrMat_4esch.png", width=3000, height=3000, res=300)
corrplot(esch4_spearman, type="upper", tl.col="black") |> corrRect(name = c('STAI Trait','16PF Reasoning', '16PF Warmth', 'SQ', '16PF Perfectionism'))
dev.off()
# Libraries
library(corrplot)
library(paran)
library(readxl)
library(nFactors)
library(EFA.dimensions)
library(FactoMineR)
library(factoextra)
library(data.table)
library(psych)
library(GPArotation)
library(ggplot2)
library(corrplot)
# Edit for local folder location
setwd("/Users/lynnkps/Documents/GitHub/ConteDataRelease/FactorAnalysis")
# Load excel sheet
cex <- read_excel('PARL_FA_Final.xlsx') # n = 144
# Composite data frame from spreadsheet columns
# Replace 16PF with X16PF in spreadsheet (variable names cannot begin with a number)
PARL_data <- cbind(
cex$VCI, # 1
cex$PRI,
cex$BDI2_Total,
cex$STAI_Trait_Tscore,
#cex$STAI_State_Tscore,
cex$PANAS_Positive,
cex$PANAS_Negative,
cex$PSS_Total,
cex$EQ_Total,
cex$SQ_Total,
cex$SNI_Count,
cex$X16PF_A,
cex$X16PF_B,
cex$X16PF_C,
cex$X16PF_E,
cex$X16PF_F,
cex$X16PF_G,
cex$X16PF_H,
cex$X16PF_I,
cex$X16PF_L,
cex$X16PF_M,
cex$X16PF_N,
cex$X16PF_O,
cex$X16PF_Q1,
cex$X16PF_Q2,
cex$X16PF_Q3,
cex$X16PF_Q4)
# Readable name mapping
names <- cbind(
"VCI IQ", # 1
"PRI IQ",
"BDI Total",
"STAI Trait", # T Score
#"STAI State T", # 5
"PANAS Positive",
"PANAS Negative",
"PSS",
"EQ",
"SQ", # 10
"SNI People", # People in Network
"16PF Warmth",
"16PF Reasoning",
"16PF Emot. Stabil.", # Emotional Stability
"16PF Dominance",
"16PF Liveliness",
"16PF Rule Conscious", # Rule Consciousness
"16PF Social Boldness",
"16PF Sensitivity",
"16PF Vigilance",
"16PF Abstractedness",
"16PF Privateness",
"16PF Apprehension",
"16PF Open to Change", # Openness to Change
"16PF Self Reliance",
"16PF Perfectionism",
"16PF Tension")
# Subject IDs to row names
row.names(PARL_data) <- cex$CC_ID
# Function to write number of factors to file
write_file <- function(method, numFac, fileName){
cat(method, "\t", numFac, "\n", file=fileName, fill=FALSE, append=TRUE)
}
# Function to calculate number of factors
find_factors <- function(df, fileName) {
# Init output file
write("Number of Factor Estimates", file=fileName, append=FALSE)
# Horn's
a <- paran(df, cfa=TRUE, graph=FALSE)
write_file("Horn's PA", a[[1]][1], fileName)
# Scree NOC
aparallel <- eigenBootParallel(x=df, cor=TRUE, quantile=0.95,method="spearman")$quantile
r <- nScree(x=df, aparallel=aparallel, cor=TRUE, model = "factors", method="spearman")
a <- r[[1]][1]
a <- as.integer(a)
print(r)
write_file("Cattell's Scree Test", a, fileName)
# CNG
cng <- nCng(x=df, cor=TRUE, model="factors", details=TRUE, method="spearman")
write_file("Cng", cng[[2]], fileName)
cat("\n***** Cng *****\n")
print(cng)
# Multiply regression (b coeff)
cat("\n***** Zoski B Coefficient *****\n")
a <- nMreg(x=df, cor=TRUE, model="factors",details=TRUE, method="spearman")
write_file("Zoski", a[[2]][[1]], fileName)
print(a)
# Velicer's MAP
a <- MAP(df, corkind="spearman", verbose=TRUE)
write_file("MAP-original 1976", a[[3]][1], fileName)
write_file("MAP-revised 2000", a[[4]][1], fileName)
# Very Simple Structure from spearman correlation
sp <- cor(df, method="spearman")
a <- VSS(sp, n=6, rotate = "varimax", fm="mle", n.obs=NULL)
vss1 <- which.max(a$cfit.1)
vss2 <- which.max(a$cfit.2)
write_file("VSS1", vss1, fileName)
write_file("VSS2", vss2, fileName)
}
# Initialize data frames
all_df <- data.frame(PARL_data) # 144 subjects
colnames(all_df) <- names
sum(is.na(all_df)/prod(dim(all_df))) # 0
nona_df <- data.frame(na.omit(all_df)) # 144 subjects, 27 variables
# Use Spearman's correlation coefficient - scores not transformable to normal
r_spearman <- cor(nona_df, method="spearman")
# Estimate number of factors with a variety of methods
num_fac <- find_factors(nona_df, "num_factor_estimates.tsv")
VSS.scree(r_spearman)
# Perform maximum likelihood factor analysis with varimax rotation, 4 factors
# Write individual scores and loadings to files
cat("\nFactor Analysis with Rotation\n")
fa4_rot <- fa(r_spearman, nfactors = 4, n.obs = 144, rotate="Varimax", scores="regression", fm="ml")
fa4_rot_scores <- factor.scores(nona_df, fa4_rot$loadings, method="Bartlett")$scores
fa4_rot_sort <- fa.sort(fa4_rot)
write.table(fa4_rot_scores, file="fa4_rotated_individual_score.tsv", sep="\t")
write.table(fa4_rot_sort$loadings, file="fa4_rotated_loadings.tsv", sep="\t")
# Perform maximum likelihood factor analysis without rotation, 4 factors
# Write individual scores and loadings to files
cat("\nFactor Analysis without Rotation\n")
fa4_unrot <- fa(r_spearman, nfactors = 4, n.obs = 144, rotate="none", scores="regression", fm="ml")
fa4_unrot_scores <- factor.scores(nona_df, fa4_unrot$loadings, method="Bartlett")$scores
fa4_unrot_sort <- fa.sort(fa4_unrot)
write.table(fa4_unrot_scores, file="fa4_unrotated_individual_score.tsv", sep="\t")
write.table(fa4_unrot_sort$loadings, file="fa4_unrotated_loadings.tsv", sep="\t")
# Congruence of rotated factors with unrotated factors - 4 factors
Rot_v_Unrot4 <- factor.congruence(fa4_rot,fa4_unrot)
write.table(Rot_v_Unrot4, file="Congruence_Rot_v_Unrot4.tsv", sep="\t")
#FA4_Rotated Eschelon-ordering of Spearman matrix
ord4 <- fa4_rot_sort$order
PARL_esch4 <- PARL_data[,c(ord4)]
names_esch4 <- names[,c(ord4)]
esch4_df <- data.frame(PARL_esch4) # 144 subjects
colnames(esch4_df) <- names_esch4
esch4_spearman <- cor(esch4_df, method="spearman")
# Correlation plot 4 factors - save to PNG file
png(file="CorrMat_4esch.png", width=3000, height=3000, res=300)
corrplot(esch4_spearman, type="upper", tl.col="black") |> corrRect(name = c('STAI Trait','16PF Reasoning', '16PF Warmth', 'SQ', '16PF Perfectionism'))
dev.off()
# Perform maximum likelihood factor analysis with varimax rotation, 3 factors
# Write individual scores and loadings to files
cat("\nFactor Analysis with Rotation\n")
fa3_rot <- fa(r_spearman, nfactors = 3, n.obs = 144, rotate="Varimax", scores="regression", fm="ml")
fa3_rot_scores <- factor.scores(nona_df, fa3_rot$loadings, method="Bartlett")$scores
fa3_rot_sort <- fa.sort(fa3_rot)
write.table(fa3_rot_scores, file="fa3_rotated_individual_score.tsv", sep="\t")
write.table(fa3_rot_sort$loadings, file="fa3_rotated_loadings.tsv", sep="\t")
# Perform maximum likelihood factor analysis without rotation, 3 factors
# Write individual scores and loadings to files
cat("\nFactor Analysis without Rotation\n")
fa3_unrot <- fa(r_spearman, nfactors = 3, n.obs = 144, rotate="none", scores="regression", fm="ml")
fa3_unrot_scores <- factor.scores(nona_df, fa3_unrot$loadings, method="Bartlett")$scores
fa3_unrot_sort <- fa.sort(fa3_unrot)
write.table(fa3_unrot_scores, file="fa3_unrotated_individual_score.tsv", sep="\t")
write.table(fa3_unrot_sort$loadings, file="fa3_unrotated_loadings.tsv", sep="\t")
# Congruence of rotated factors with unrotated factors - 3 factors
Rot_v_Unrot3 <- factor.congruence(fa3_rot,fa3_unrot)
write.table(Rot_v_Unrot3, file="Congruence_Rot_v_Unrot3.tsv", sep="\t")
#FA3_Rot Eschelon ordering of Spearman matrix
ord3 <- fa3_rot_sort$order
PARL_esch3 <- PARL_data[,c(ord3)]
names_esch3 <- names[,c(ord3)]
esch3_df <- data.frame(PARL_esch3) # 144 subjects
colnames(esch3_df) <- names_esch3
esch3_spearman <- cor(esch3_df, method="spearman")
# Correlation plot 3 factors - save to PNG file
png(file="CorrMat_3esch.png", width=3000, height=3000, res=300)
corrplot(esch3_spearman, type="upper", tl.col="black") |> corrRect(name = c('STAI Trait','16PF Reasoning', '16PF Warmth','16PF Dominance'))
save.image("~/Documents/GitHub/ConteDataRelease/FactorAnalysis/Factor_Analysis.RData")
View(all_df)
View(all_df)
VSS.scree(r_spearman)
# Libraries
library(corrplot)
library(paran)
library(readxl)
library(nFactors)
library(EFA.dimensions)
library(FactoMineR)
library(factoextra)
library(data.table)
library(psych)
library(GPArotation)
library(ggplot2)
library(corrplot)
# Edit for local folder location
setwd("/Users/lynnkps/Documents/GitHub/ConteDataRelease/FactorAnalysis")
# Load excel sheet
cex <- read_excel('PARL_FA_Final.xlsx') # n = 144
# Composite data frame from spreadsheet columns
# Replace 16PF with X16PF in spreadsheet (variable names cannot begin with a number)
PARL_data <- cbind(
cex$VCI, # 1
cex$PRI,
cex$BDI2_Total,
cex$STAI_Trait_Tscore,
#cex$STAI_State_Tscore, excluded from factor analysis due to high correlation with STAI Trait
cex$PANAS_Positive,
cex$PANAS_Negative,
cex$PSS_Total,
cex$EQ_Total,
cex$SQ_Total,
cex$SNI_Count,
cex$X16PF_A,
cex$X16PF_B,
cex$X16PF_C,
cex$X16PF_E,
cex$X16PF_F,
cex$X16PF_G,
cex$X16PF_H,
cex$X16PF_I,
cex$X16PF_L,
cex$X16PF_M,
cex$X16PF_N,
cex$X16PF_O,
cex$X16PF_Q1,
cex$X16PF_Q2,
cex$X16PF_Q3,
cex$X16PF_Q4)
# Readable name mapping
names <- cbind(
"VCI IQ", # 1
"PRI IQ",
"BDI Total",
"STAI Trait", # T Score
#"STAI State T", # 5
"PANAS Positive",
"PANAS Negative",
"PSS",
"EQ",
"SQ", # 10
"SNI People", # People in Network
"16PF Warmth",
"16PF Reasoning",
"16PF Emot. Stabil.", # Emotional Stability
"16PF Dominance",
"16PF Liveliness",
"16PF Rule Conscious", # Rule Consciousness
"16PF Social Boldness",
"16PF Sensitivity",
"16PF Vigilance",
"16PF Abstractedness",
"16PF Privateness",
"16PF Apprehension",
"16PF Open to Change", # Openness to Change
"16PF Self Reliance",
"16PF Perfectionism",
"16PF Tension")
# Subject IDs to row names
row.names(PARL_data) <- cex$CC_ID
# Function to write number of factors to file
write_file <- function(method, numFac, fileName){
cat(method, "\t", numFac, "\n", file=fileName, fill=FALSE, append=TRUE)
}
# Function to calculate number of factors
find_factors <- function(df, fileName) {
# Init output file
write("Number of Factor Estimates", file=fileName, append=FALSE)
# Horn's
a <- paran(df, cfa=TRUE, graph=FALSE)
write_file("Horn's PA", a[[1]][1], fileName)
# Scree NOC
aparallel <- eigenBootParallel(x=df, cor=TRUE, quantile=0.95,method="spearman")$quantile
r <- nScree(x=df, aparallel=aparallel, cor=TRUE, model = "factors", method="spearman")
a <- r[[1]][1]
a <- as.integer(a)
print(r)
write_file("Cattell's Scree Test", a, fileName)
# CNG
cng <- nCng(x=df, cor=TRUE, model="factors", details=TRUE, method="spearman")
write_file("Cng", cng[[2]], fileName)
cat("\n***** Cng *****\n")
print(cng)
# Multiply regression (b coeff)
cat("\n***** Zoski B Coefficient *****\n")
a <- nMreg(x=df, cor=TRUE, model="factors",details=TRUE, method="spearman")
write_file("Zoski", a[[2]][[1]], fileName)
print(a)
# Velicer's MAP
a <- MAP(df, corkind="spearman", verbose=TRUE)
write_file("MAP-original 1976", a[[3]][1], fileName)
write_file("MAP-revised 2000", a[[4]][1], fileName)
# Very Simple Structure from spearman correlation
sp <- cor(df, method="spearman")
a <- VSS(sp, n=6, rotate = "varimax", fm="mle", n.obs=NULL)
vss1 <- which.max(a$cfit.1)
vss2 <- which.max(a$cfit.2)
write_file("VSS1", vss1, fileName)
write_file("VSS2", vss2, fileName)
}
# Initialize data frames
all_df <- data.frame(PARL_data) # 144 subjects
colnames(all_df) <- names
sum(is.na(all_df)/prod(dim(all_df))) # 0
nona_df <- data.frame(na.omit(all_df)) # 144 subjects, 27 variables
# Use Spearman's correlation coefficient - scores not transformable to normal
r_spearman <- cor(nona_df, method="spearman")
# Estimate number of factors with a variety of methods
num_fac <- find_factors(nona_df, "num_factor_estimates.tsv")
VSS.scree(r_spearman)
# Perform maximum likelihood factor analysis with varimax rotation, 4 factors
# Write individual scores and loadings to files
cat("\nFactor Analysis with Rotation\n")
fa4_rot <- fa(r_spearman, nfactors = 4, n.obs = 144, rotate="Varimax", scores="regression", fm="ml")
fa4_rot_scores <- factor.scores(nona_df, fa4_rot$loadings, method="Bartlett")$scores
fa4_rot_sort <- fa.sort(fa4_rot)
write.table(fa4_rot_scores, file="fa4_rotated_individual_score.tsv", sep="\t")
write.table(fa4_rot_sort$loadings, file="fa4_rotated_loadings.tsv", sep="\t")
# Perform maximum likelihood factor analysis without rotation, 4 factors
# Write individual scores and loadings to files
cat("\nFactor Analysis without Rotation\n")
fa4_unrot <- fa(r_spearman, nfactors = 4, n.obs = 144, rotate="none", scores="regression", fm="ml")
fa4_unrot_scores <- factor.scores(nona_df, fa4_unrot$loadings, method="Bartlett")$scores
fa4_unrot_sort <- fa.sort(fa4_unrot)
write.table(fa4_unrot_scores, file="fa4_unrotated_individual_score.tsv", sep="\t")
write.table(fa4_unrot_sort$loadings, file="fa4_unrotated_loadings.tsv", sep="\t")
# Congruence of rotated factors with unrotated factors - 4 factors
Rot_v_Unrot4 <- factor.congruence(fa4_rot,fa4_unrot)
write.table(Rot_v_Unrot4, file="Congruence_Rot_v_Unrot4.tsv", sep="\t")
#FA4_Rotated Eschelon-ordering of Spearman matrix
ord4 <- fa4_rot_sort$order
PARL_esch4 <- PARL_data[,c(ord4)]
names_esch4 <- names[,c(ord4)]
esch4_df <- data.frame(PARL_esch4) # 144 subjects
colnames(esch4_df) <- names_esch4
esch4_spearman <- cor(esch4_df, method="spearman")
# Correlation plot 4 factors - save to PNG file
png(file="CorrMat_4esch.png", width=3000, height=3000, res=300)
corrplot(esch4_spearman, type="upper", tl.col="black") |> corrRect(name = c('STAI Trait','16PF Reasoning', '16PF Warmth', 'SQ', '16PF Perfectionism'))
dev.off()
# Perform maximum likelihood factor analysis with varimax rotation, 3 factors
# Write individual scores and loadings to files
cat("\nFactor Analysis with Rotation\n")
fa3_rot <- fa(r_spearman, nfactors = 3, n.obs = 144, rotate="Varimax", scores="regression", fm="ml")
fa3_rot_scores <- factor.scores(nona_df, fa3_rot$loadings, method="Bartlett")$scores
fa3_rot_sort <- fa.sort(fa3_rot)
write.table(fa3_rot_scores, file="fa3_rotated_individual_score.tsv", sep="\t")
write.table(fa3_rot_sort$loadings, file="fa3_rotated_loadings.tsv", sep="\t")
# Perform maximum likelihood factor analysis without rotation, 3 factors
# Write individual scores and loadings to files
cat("\nFactor Analysis without Rotation\n")
fa3_unrot <- fa(r_spearman, nfactors = 3, n.obs = 144, rotate="none", scores="regression", fm="ml")
fa3_unrot_scores <- factor.scores(nona_df, fa3_unrot$loadings, method="Bartlett")$scores
fa3_unrot_sort <- fa.sort(fa3_unrot)
write.table(fa3_unrot_scores, file="fa3_unrotated_individual_score.tsv", sep="\t")
write.table(fa3_unrot_sort$loadings, file="fa3_unrotated_loadings.tsv", sep="\t")
# Congruence of rotated factors with unrotated factors - 3 factors
Rot_v_Unrot3 <- factor.congruence(fa3_rot,fa3_unrot)
write.table(Rot_v_Unrot3, file="Congruence_Rot_v_Unrot3.tsv", sep="\t")
#FA3_Rot Eschelon ordering of Spearman matrix
ord3 <- fa3_rot_sort$order
PARL_esch3 <- PARL_data[,c(ord3)]
names_esch3 <- names[,c(ord3)]
esch3_df <- data.frame(PARL_esch3) # 144 subjects
colnames(esch3_df) <- names_esch3
esch3_spearman <- cor(esch3_df, method="spearman")
# Correlation plot 3 factors - save to PNG file
png(file="CorrMat_3esch.png", width=3000, height=3000, res=300)
corrplot(esch3_spearman, type="upper", tl.col="black") |> corrRect(name = c('STAI Trait','16PF Reasoning', '16PF Warmth','16PF Dominance'))
dev.off()
VSS_scree <- VSS.scree(r_spearman)
save VSS_scree
save ,- VSS_scree
save <- VSS_scree
write_file(VSS_scree)
write_file(VSS_scree, fileName = "VSS_scree")
dev.copy(jpeg, 'VSS_scree.jpg')
jpeg(file="VSS_scree.jpeg")
dev(off)
dev.off()
jpeg(file="VSS_scree.jpeg")
VSS.scree(r_spearman)
dev.off()
# Initialize data frames
all_df <- data.frame(PARL_data) # 144 subjects
colnames(all_df) <- names
sum(is.na(all_df)/prod(dim(all_df))) # 0
nona_df <- data.frame(na.omit(all_df)) # 144 subjects, 27 variables
# Use Spearman's correlation coefficient - scores not transformable to normal
r_spearman <- cor(nona_df, method="spearman")
# Estimate number of factors with a variety of methods
num_fac <- find_factors(nona_df, "num_factor_estimates.tsv")
jpeg(file="VSS_scree.jpeg")
VSS.scree(r_spearman)
dev.off()
# Perform maximum likelihood factor analysis with varimax rotation, 4 factors
# Write individual scores and loadings to files
cat("\nFactor Analysis with Rotation\n")
fa4_rot <- fa(r_spearman, nfactors = 4, n.obs = 144, rotate="Varimax", scores="regression", fm="ml")
fa4_rot_scores <- factor.scores(nona_df, fa4_rot$loadings, method="Bartlett")$scores
fa4_rot_sort <- fa.sort(fa4_rot)
write.table(fa4_rot_scores, file="fa4_rotated_individual_score.tsv", sep="\t")
# Perform maximum likelihood factor analysis with varimax rotation, 4 factors
# Write individual scores and loadings to files
cat("\nFactor Analysis with Rotation\n")
fa4_rot <- fa(r_spearman, nfactors = 4, n.obs = 144, rotate="Varimax", scores="regression", fm="ml")
fa4_rot_scores <- factor.scores(nona_df, fa4_rot$loadings, method="Bartlett")$scores
fa4_rot_sort <- fa.sort(fa4_rot)
write.table(fa4_rot_scores, file="fa4_rotated_individual_score.tsv", sep="\t")
write.table(fa4_rot_sort$loadings, file="fa4_rotated_loadings.tsv", sep="\t")
# Perform maximum likelihood factor analysis without rotation, 4 factors
# Write individual scores and loadings to files
cat("\nFactor Analysis without Rotation\n")
fa4_unrot <- fa(r_spearman, nfactors = 4, n.obs = 144, rotate="none", scores="regression", fm="ml")
fa4_unrot_scores <- factor.scores(nona_df, fa4_unrot$loadings, method="Bartlett")$scores
fa4_unrot_sort <- fa.sort(fa4_unrot)
write.table(fa4_unrot_scores, file="fa4_unrotated_individual_score.tsv", sep="\t")
write.table(fa4_unrot_sort$loadings, file="fa4_unrotated_loadings.tsv", sep="\t")
# Congruence of rotated factors with unrotated factors - 4 factors
Rot_v_Unrot4 <- factor.congruence(fa4_rot,fa4_unrot)
write.table(Rot_v_Unrot4, file="Congruence_Rot_v_Unrot4.tsv", sep="\t")
#FA4_Rotated Eschelon-ordering of Spearman matrix
ord4 <- fa4_rot_sort$order
PARL_esch4 <- PARL_data[,c(ord4)]
names_esch4 <- names[,c(ord4)]
esch4_df <- data.frame(PARL_esch4) # 144 subjects
colnames(esch4_df) <- names_esch4
esch4_spearman <- cor(esch4_df, method="spearman")
# Correlation plot 4 factors - save to PNG file
png(file="CorrMat_4esch.png", width=3000, height=3000, res=300)
corrplot(esch4_spearman, type="upper", tl.col="black") |> corrRect(name = c('STAI Trait','16PF Reasoning', '16PF Warmth', 'SQ', '16PF Perfectionism'))
dev.off()
# Perform maximum likelihood factor analysis with varimax rotation, 3 factors
# Write individual scores and loadings to files
cat("\nFactor Analysis with Rotation\n")
fa3_rot <- fa(r_spearman, nfactors = 3, n.obs = 144, rotate="Varimax", scores="regression", fm="ml")
fa3_rot_scores <- factor.scores(nona_df, fa3_rot$loadings, method="Bartlett")$scores
fa3_rot_sort <- fa.sort(fa3_rot)
write.table(fa3_rot_scores, file="fa3_rotated_individual_score.tsv", sep="\t")
write.table(fa3_rot_sort$loadings, file="fa3_rotated_loadings.tsv", sep="\t")
# Perform maximum likelihood factor analysis without rotation, 3 factors
# Write individual scores and loadings to files
cat("\nFactor Analysis without Rotation\n")
fa3_unrot <- fa(r_spearman, nfactors = 3, n.obs = 144, rotate="none", scores="regression", fm="ml")
fa3_unrot_scores <- factor.scores(nona_df, fa3_unrot$loadings, method="Bartlett")$scores
fa3_unrot_sort <- fa.sort(fa3_unrot)
write.table(fa3_unrot_scores, file="fa3_unrotated_individual_score.tsv", sep="\t")
write.table(fa3_unrot_sort$loadings, file="fa3_unrotated_loadings.tsv", sep="\t")
# Congruence of rotated factors with unrotated factors - 3 factors
Rot_v_Unrot3 <- factor.congruence(fa3_rot,fa3_unrot)
write.table(Rot_v_Unrot3, file="Congruence_Rot_v_Unrot3.tsv", sep="\t")
#FA3_Rot Eschelon ordering of Spearman matrix
ord3 <- fa3_rot_sort$order
PARL_esch3 <- PARL_data[,c(ord3)]
names_esch3 <- names[,c(ord3)]
esch3_df <- data.frame(PARL_esch3) # 144 subjects
colnames(esch3_df) <- names_esch3
esch3_spearman <- cor(esch3_df, method="spearman")
# Correlation plot 3 factors - save to PNG file
png(file="CorrMat_3esch.png", width=3000, height=3000, res=300)
corrplot(esch3_spearman, type="upper", tl.col="black") |> corrRect(name = c('STAI Trait','16PF Reasoning', '16PF Warmth','16PF Dominance'))
dev.off()
